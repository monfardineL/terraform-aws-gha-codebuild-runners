name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.4

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

  terraform-docs:
    name: Generate Terraform Docs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Render terraform docs and push changes back to PR
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        working-dir: .
        output-file: README.md
        output-method: inject
        git-push: "true"

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [basic, advanced]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.4

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: examples/${{ matrix.example }}

    - name: Terraform Init
      run: terraform init
      working-directory: examples/${{ matrix.example }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: examples/${{ matrix.example }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov action
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: .
        framework: terraform
        output_format: sarif
        output_file_path: reports/results.sarif

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: reports/results.sarif